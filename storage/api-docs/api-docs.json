{
    "openapi": "3.0.0",
    "info": {
        "title": "meuedital",
        "contact": {
            "email": "contato@jaidsondantas.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://back.meuedital.com/api",
            "description": "Server location {{wamp}}"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new User",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Jaidson",
                                    "email": "jaidsondantas@gmail.com",
                                    "password": "123",
                                    "password_confirmation": "123",
                                    "client_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Generate new Token",
                "operationId": "App\\Http\\Controllers\\AuthController::login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "jaidsondantas@gmail.com",
                                    "password": "123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout User",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    }
                }
            }
        },
        "/country": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "GET Country",
                "operationId": "App\\Http\\Controllers\\CountryController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Registro de um novo Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Itália",
                                    "initials": "IT"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Deletando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/country/1": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "GET Country",
                "operationId": "App\\Http\\Controllers\\CountryController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Atualizando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Israel",
                                    "initials": "IS"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Deletando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/education_level": {
            "get": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "GET EducationLevel",
                "operationId": "App\\Http\\Controllers\\EducationLevelController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "Registro de um novo Nível de Educação",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Superior"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "Deletando Nível de Educação",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/education_level/1": {
            "get": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "GET EducationLevel",
                "operationId": "App\\Http\\Controllers\\EducationLevelController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "Atualizando Nível de Educação",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Superior"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EducationLevel"
                ],
                "summary": "Deletando Nível de Educação",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/examination_board": {
            "get": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "GET ExaminationBoard",
                "operationId": "App\\Http\\Controllers\\ExaminationBoardController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "Registro de um novo Banca",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "Deletando Banca",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/examination_board/1": {
            "get": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "GET ExaminationBoard",
                "operationId": "App\\Http\\Controllers\\ExaminationBoardController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "Atualizando Banca",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExaminationBoard"
                ],
                "summary": "Deletando Banca",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/organ": {
            "get": {
                "tags": [
                    "Organ"
                ],
                "summary": "GET Organ",
                "operationId": "App\\Http\\Controllers\\OrganController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Organ"
                ],
                "summary": "Registro de um novo orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organ"
                ],
                "summary": "Deletando orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/organ/1": {
            "get": {
                "tags": [
                    "Organ"
                ],
                "summary": "GET Organ",
                "operationId": "App\\Http\\Controllers\\OrganController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organ"
                ],
                "summary": "Atualizando orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organ"
                ],
                "summary": "Deletando orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/organ_scope": {
            "get": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "GET OrganScope",
                "operationId": "App\\Http\\Controllers\\OrganScopeController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "Registro de um novo Scope do orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "Deletando Scope do orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/organ_scope/1": {
            "get": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "GET OrganScope",
                "operationId": "App\\Http\\Controllers\\OrganScopeController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "Atualizando Scope do orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrganScope"
                ],
                "summary": "Deletando Scope do orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice": {
            "get": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "GET PublicTenderNotice",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "Registro de um novo Editais",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "year": {
                                        "type": "string"
                                    },
                                    "organ_id": {
                                        "type": "string"
                                    },
                                    "examination_board_id": {
                                        "type": "string"
                                    },
                                    "status_public_tender_notice_id": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Concurso SEDF",
                                    "description": "Pense um pouco e responda: quantas janelas de oportunidades de fato significativas abrem-se durante uma vida?",
                                    "year": "2020",
                                    "organ_id": 2,
                                    "examination_board_id": 1,
                                    "status_public_tender_notice_id": 1,
                                    "created_by": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "Deletando Editais",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice/1": {
            "get": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "GET PublicTenderNotice",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "Atualizando Editais",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "year": {
                                        "type": "string"
                                    },
                                    "organ_id": {
                                        "type": "string"
                                    },
                                    "examination_board_id": {
                                        "type": "string"
                                    },
                                    "status_public_tender_notice_id": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Concurso SEDF",
                                    "description": "Pense um pouco e responda: quantas janelas de oportunidades de fato significativas abrem-se durante uma vida?",
                                    "year": "2020",
                                    "organ_id": 2,
                                    "examination_board_id": 1,
                                    "status_public_tender_notice_id": 1,
                                    "created_by": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNotice"
                ],
                "summary": "Deletando Editais",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice_education_level": {
            "get": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "GET PublicTenderNoticeXEducationLevel",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeXEducationLevelController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "Registro de um novo Edital e Nivel",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "Deletando Edital e Nivel",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice_education_level/1": {
            "get": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "GET PublicTenderNoticeXEducationLevel",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeXEducationLevelController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "Atualizando Edital e Nivel",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNoticeXEducationLevel"
                ],
                "summary": "Deletando Edital e Nivel",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice_state": {
            "get": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "GET PublicTenderNoticeXState",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeXStateController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "Registro de um novo Edital e Estado",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "Deletando Edital e Estado",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/public_tender_notice_state/1": {
            "get": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "GET PublicTenderNoticeXState",
                "operationId": "App\\Http\\Controllers\\PublicTenderNoticeXStateController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "Atualizando Edital e Estado",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PublicTenderNoticeXState"
                ],
                "summary": "Deletando Edital e Estado",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/state": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "GET State",
                "operationId": "App\\Http\\Controllers\\StateController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Registro de um novo Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Deletando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/state/1": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "GET State",
                "operationId": "App\\Http\\Controllers\\StateController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "State"
                ],
                "summary": "Atualizando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Deletando Paíz",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/status_public_tender_notice": {
            "get": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "GET StatusPublicTenderNotice",
                "operationId": "App\\Http\\Controllers\\StatusPublicTenderNoticeController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "Registro de um novo Status",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "Deletando Status",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/status_public_tender_notice/1": {
            "get": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "GET StatusPublicTenderNotice",
                "operationId": "App\\Http\\Controllers\\StatusPublicTenderNoticeController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "Atualizando Status",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "initials": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami",
                                    "initials": "MI",
                                    "country_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "StatusPublicTenderNotice"
                ],
                "summary": "Deletando Status",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/type_organ": {
            "get": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "GET TypeOrgan",
                "operationId": "App\\Http\\Controllers\\TypeOrganController::find",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "Registro de um novo Tipo de Orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "Deletando Tipo de Orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    },
                    {
                        "$ref": "#/components/parameters/where"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/type_organ/1": {
            "get": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "GET TypeOrgan",
                "operationId": "App\\Http\\Controllers\\TypeOrganController::show",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/context"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine"
                    },
                    "404": {
                        "description": "Example not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "Atualizando Tipo de Orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Miami"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TypeOrgan"
                ],
                "summary": "Deletando Tipo de Orgão",
                "operationId": "store",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Authorization"
                    },
                    {
                        "$ref": "#/components/parameters/populate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "order": {
                "name": "order",
                "in": "query",
                "description": "<p>Examples:</p> <pre><em>order: {'principal': 'ASC'}      = ORDER BY entity.principal ASC<br>order: {'criadoEm': 'DESC'}      = ORDER BY entity.criadoEm DESC </em></pre>",
                "required": true,
                "schema": {
                    "type": "string",
                    "default": {
                        "created_at": "ASC"
                    }
                }
            },
            "limit": {
                "name": "limit",
                "in": "query",
                "description": "<p>Examples:</p> <pre><em>limit: 10</em></pre>",
                "required": true,
                "schema": {
                    "type": "integer",
                    "default": 10
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "description": "<p>Examples:</p> <pre><em>offset: 0</em></pre>",
                "required": true,
                "schema": {
                    "type": "integer",
                    "default": 1
                }
            },
            "where": {
                "name": "where",
                "in": "query",
                "description": "examples: <br/> <pre><em>where: {'id': 'eq:1'}                       | WHERE entity.id = 1<br>where: {'id': 'neq:1'}                      | WHERE entity.id != 1<br>where: {'id': 'like:1%}                     | WHERE entity.id like ('1%')<br>where: {'id': 'notLike:1%'}                 | WHERE entity.id not like ('1%')<br>where: {'id': 'gt:1'}                       | WHERE entity.id  1<br>where: {'id': 'gte:1'}                      | WHERE entity.id = 1<br>where: {'id': 'lt:1'}                       | WHERE entity.id &lt; 1<br>where: {'id': 'lte:1'}                      | WHERE entity.id = 1<br>where: {'id': 'in:[1,2,3,4]'}               | WHERE entity.id in (1,2,3,4)<br>where: {'id': 'notIn:[1,2,3,4]'}            | WHERE entity.id not in (1,2,3,4)<br>where: {'id': 'isNull'}                     | WHERE entity.id isNull<br>where: {'id': 'isNotNull'}                  | WHERE entity.id isNotNull<br>where: [{'id': 'eq:1'},{'id': 'eq:2'}]      | WHERE entity.id = 1 or entity.id = 2</em></pre>",
                "schema": {
                    "type": "string",
                    "default": {
                        "and": [],
                        "or": []
                    }
                }
            },
            "context": {
                "name": "context",
                "in": "query",
                "description": "examples: <br/> <pre><em>{'context': '12345678'}</em></pre>",
                "schema": {
                    "type": "string",
                    "default": "{}"
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "description": "examples: <br/> <pre><em>5</em></pre>",
                "schema": {
                    "type": "string",
                    "default": "15"
                }
            },
            "populate": {
                "name": "populate",
                "in": "query",
                "description": "examples: <br/> <pre><em>['populateAll']</em></pre>",
                "schema": {
                    "type": "string",
                    "default": [
                        "populateAll"
                    ]
                }
            },
            "Authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "examples: <br/> <pre><em>Bearer </em></pre>",
                "schema": {
                    "type": "string",
                    "default": "Bearer {{api_token}}"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://back.meuedital.com/api/oauth"
            }
        },
        {
            "name": "Country",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/country"
            }
        },
        {
            "name": "Country",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/country"
            }
        },
        {
            "name": "EducationLevel",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/education_level"
            }
        },
        {
            "name": "EducationLevel",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/education_level"
            }
        },
        {
            "name": "ExaminationBoard",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/examination_board"
            }
        },
        {
            "name": "ExaminationBoard",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/examination_board"
            }
        },
        {
            "name": "Organ",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/organ"
            }
        },
        {
            "name": "Organ",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/organ"
            }
        },
        {
            "name": "OrganScope",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/organ_scope"
            }
        },
        {
            "name": "OrganScope",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/organ_scope"
            }
        },
        {
            "name": "PublicTenderNotice",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice"
            }
        },
        {
            "name": "PublicTenderNotice",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice"
            }
        },
        {
            "name": "PublicTenderNoticeXEducationLevel",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice_education_level"
            }
        },
        {
            "name": "PublicTenderNoticeXEducationLevel",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice_education_level"
            }
        },
        {
            "name": "PublicTenderNoticeXState",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice_state"
            }
        },
        {
            "name": "PublicTenderNoticeXState",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/public_tender_notice_state"
            }
        },
        {
            "name": "State",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/state"
            }
        },
        {
            "name": "State",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/state"
            }
        },
        {
            "name": "StatusPublicTenderNotice",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/status_public_tender_notice"
            }
        },
        {
            "name": "StatusPublicTenderNotice",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/status_public_tender_notice"
            }
        },
        {
            "name": "TypeOrgan",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/type_organ"
            }
        },
        {
            "name": "TypeOrgan",
            "description": "Credentials object",
            "externalDocs": {
                "description": "Credentials object",
                "url": "http://autopecadelivery.com/api/type_organ"
            }
        }
    ]
}